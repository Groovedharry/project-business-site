/* the + sign is used to select the sibling that comes immediately next to the element you selected.
in this case it is the div with the answer class next to the div with the active class.
this can be used for the FAQ-accordion. read more here: https://www.w3schools.com/css/css_combinators.asp */


/*.active + .answer {
  /* some styling here */

html{
    scroll-behavior: smooth;
}
body {
    margin: 0;
    padding: 0;
    max-width: 100vw;
}



.hero {
    background: url('https://images.unsplash.com/photo-1621605815971-fbc98d665033?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80') center;
    background-size: cover;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    max-width: 100vw;
    height: 100%;
    overflow-x: hidden;
}

.bigtext {
    font-size: 10vw;
    padding-bottom: 1rem;
    color: #EFEEED;
    text-decoration: underline;
}


/* trying out text in hero */


/* .scroll-text-box{
  width:100%;
  height:5rem;
 } */


/* .scroll-text{
  color:orange;
  font-size: 24px;
  font-family: fantasy;
  text-decoration: underline;
  position: relative;
  top:180%;
} */

.scroll-down {
    height: 50px;
    width: 30px;
    border: 2px solid orange;
    position: absolute;
    /* left: 49%; */
    bottom: 20px;
    border-radius: 50px;
    cursor: pointer;
    display: flex;
    align-content: center;
}

.halfling {
    left: 49%;
    margin: auto;
}

.scroll-down::before,
.scroll-down::after {
    content: "";
    position: absolute;
    top: 20%;
    left: 50%;
    height: 10px;
    width: 10px;
    transform: translate(-50%, -100%) rotate(45deg);
    border: 2px solid orange;
    border-top: transparent;
    border-left: transparent;
    animation: scroll-down 1s ease-in-out infinite;
}

.scroll-down::before {
    top: 30%;
    animation-delay: 0.3s;
}

@keyframes scroll-down {
    0% {
        opacity: 0;
    }
    30% {
        opacity: 1;
    }
    60% {
        opacity: 1;
    }
    100% {
        top: 90%;
        opacity: 0;
    }
}


/* @media screen and (min-width:601px){
  .bigtext{
    font-size: 7rem;
  }

}

@media screen and (max-width: 600px) {
  .bigtext {
    font-size: 3rem;
  }
} */

.subscribe {
    background-color: orange;
    display: flex;
    justify-content: center;
    margin: 0 auto;
    position: relative;
}

.bg {
    background-image: url(https://images.unsplash.com/photo-1621607512026-ba3e0857c6f4?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80);
    background-size: cover;
    width: 50vw;
    height: 100vh;
    margin-top: 1rem;
}

.forms {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    max-width: 100vw;
    position: absolute;
    position: relative;
    top: 20%;
}

.formq {
    margin-top: 1rem;
    width: 50%;
    height: 3rem;
}

select {
    margin-top: 1rem;
    height: 3rem;
    width: 50%;
}

.sub-button {
    margin-top: 2rem;
    background-color: orange;
    border: none;
    color: black;
    padding: 0.7rem 2.5rem;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    Font-size: 2rem;
    border-radius: 1rem;
    transition-duration: 0.4s;
}

.sub-button:hover {
    opacity: 70%;
    color: gray;
    box-shadow: 0 0.8rem 1rem 0 rgba(0, 0, 0, 0.24), 0 1rem 3rem 0 rgba(0, 0, 0, 0.19);
    ;
}

.container {
    color: orange;
    Display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    margin-top: 1rem;
    text-decoration: underline;
    font-weight: bold;
}

.container input{
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
      
}

.checkmark{
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
    background-color: #ccc;
  }
  
  /* When the checkbox is checked, add a blue background */
  .container input:checked ~ .checkmark {
    background-color: orange;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .container .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid black;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }
/* can't uncheck the radio mark ask a question about it */
  .radiobg{
      height: 30px;
       }

       .accordion{
           background: orange;
           display: flex;
           flex-direction: column;

           align-items: center;



       }

       .accordion-button {
        background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: 2px solid black;
        outline: none;
        transition: 0.4s;
        text-align: center;
        margin-top: 5px;
         
    }

    .accordion-button:after {
        content: '\002B';
        color: #777;
        font-weight: bold;
        float: right;
        margin-left: 5px;
        
      }
      
      .active:after {
        content: "\2212";
      }
      
      /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
      .active, .accordion-button:hover {
        background-color: #ccc;
      }
      
      /* Style the accordion panel. Note: hidden by default */
      .panel {
        padding: 0 18px;
        background-color: white;
        max-height: 5rem;
        display: none;
        overflow: hidden;
        transition:max-height 0.2s ease-out;
      }

@media screen and (max-width: 800px) {
    .bg {
        width: 100vw;
    }
}

